<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>NgocTD&#39;s Dev Log</title>
    <link>https://idev-blog.web.app/</link>
    <description>Recent content on NgocTD&#39;s Dev Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Tran Duc Ngoc</copyright>
    <lastBuildDate>Wed, 02 Nov 2022 10:08:30 +0700</lastBuildDate><atom:link href="https://idev-blog.web.app/index.xml" rel="self" type="application/rss+xml" /><icon>https://idev-blog.web.app/logo.png</icon>
    
    
    <item>
      <title>Trino Overview</title>
      <link>https://idev-blog.web.app/posts/trino-overview/</link>
      <pubDate>Wed, 02 Nov 2022 10:08:30 +0700</pubDate>
      
      <guid>https://idev-blog.web.app/posts/trino-overview/</guid>
      <description><![CDATA[<p>Since Trino is being called a database by many members of the community, it makes sense to begin with a definition of what Trino is not. Trino is not a general-purpose relation database. It is not a replacement for databases like MySQL, PostgreSQL or Oracle.</p>
<h2 id="what-trino-is">What Trino is</h2>
<p>Trino is a tool designed to efficiently query vast amount of data using distributed queries. Trino was designed to handle data warehousing and analytics: data analysis, aggregating large amounts of data and producing reports.</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Golang All in One</title>
      <link>https://idev-blog.web.app/posts/golang-all-in-one/</link>
      <pubDate>Wed, 02 Nov 2022 07:33:22 +0700</pubDate>
      
      <guid>https://idev-blog.web.app/posts/golang-all-in-one/</guid>
      <description><![CDATA[<p>All about golang at basic level in one post. Content in this post i have learned in <a href="https://go101.org/">go101 book </a> and on the internet. At this time, i think it can be misconcept in golang.</p>
<h2 id="basic-types-and-basic-value-literals">Basic Types and Basic Value Literals</h2>
<p>rune type (a.k.a int32 type), are special integer types. A rune value is intended to store a Unicode point. A rune literal is expressed as one or more characters enclosed in a pair of quotes, for example &lsquo;a&rsquo; (the Unicode value of character a is 97). We should know that some Unicode characters are composed of more than one code points, for example &lsquo;a&rsquo;, &lsquo;\x61&rsquo;, &lsquo;\141&rsquo; are the same (the Unicode value is 97).</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">func</span> <span style="color:#50fa7b">main</span>() {
</span></span><span style="display:flex;"><span>	<span style="color:#8be9fd;font-style:italic">println</span>(<span style="color:#f1fa8c">&#39;a&#39;</span> <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">97</span>)
</span></span><span style="display:flex;"><span>	<span style="color:#8be9fd;font-style:italic">println</span>(<span style="color:#f1fa8c">&#39;a&#39;</span> <span style="color:#ff79c6">==</span> <span style="color:#f1fa8c">&#39;\x61&#39;</span>)
</span></span><span style="display:flex;"><span>	<span style="color:#8be9fd;font-style:italic">println</span>(<span style="color:#f1fa8c">&#39;a&#39;</span> <span style="color:#ff79c6">==</span> <span style="color:#f1fa8c">&#39;\141&#39;</span>)
</span></span><span style="display:flex;"><span>	<span style="color:#8be9fd;font-style:italic">println</span>(<span style="color:#f1fa8c">&#39;a&#39;</span> <span style="color:#ff79c6">==</span> <span style="color:#f1fa8c">&#39;\u0061&#39;</span>)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></description>
      
    </item>
    
    
    
    <item>
      <title>Concurrency Pattern</title>
      <link>https://idev-blog.web.app/posts/concurrency-pattern/</link>
      <pubDate>Tue, 01 Nov 2022 21:20:06 +0700</pubDate>
      
      <guid>https://idev-blog.web.app/posts/concurrency-pattern/</guid>
      <description><![CDATA[<h1 id="concurrency-pattern">Concurrency Pattern</h1>
<p>Hello world</p>
]]></description>
      
    </item>
    
    
    
    
    
    
  </channel>
</rss>
