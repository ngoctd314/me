<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>solid on Dev&#39;s Log</title>
    <link>https://idev-blog.web.app/tags/solid/</link>
    <description>Recent content in solid on Dev&#39;s Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Tran Duc Ngoc</copyright>
    <lastBuildDate>Mon, 12 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://idev-blog.web.app/tags/solid/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>wire for D. D for Dependency Injection</title>
      <link>https://idev-blog.web.app/posts/programming-language-wire-for-d/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://idev-blog.web.app/posts/programming-language-wire-for-d/</guid>
      <description>Wire has two core concepts: providers and injectors.
Providers The primary mechanism in Wire is the providers: a function that can produce a value.
type Foo struct { X int } func ProvideFoo() Foo { return Foo{X: 42} } Providers can also return errors</description>
    </item>
    
  </channel>
</rss>
