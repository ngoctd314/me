<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ngoctd on NgocTD&#39;s Dev Log</title>
    <link>https://idev-blog.web.app/authors/ngoctd/</link>
    <description>Recent content in ngoctd on NgocTD&#39;s Dev Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Tran Duc Ngoc</copyright>
    <lastBuildDate>Sat, 05 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://idev-blog.web.app/authors/ngoctd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generator and Future Pattern</title>
      <link>https://idev-blog.web.app/posts/concurrency-pattern-generator-future/</link>
      <pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://idev-blog.web.app/posts/concurrency-pattern-generator-future/</guid>
      <description>Generator Pattern allows the consumer of the data produced by the generator to run in parallel when the generator function is busy computing the next value.
A Future indicates any data that is needed in future but its computation can be started in parallel so that it can be fetched from the background when needed.</description>
    </item>
    
    <item>
      <title>Fan out, Fan in</title>
      <link>https://idev-blog.web.app/posts/concurrency-pattern-fan-in-fan-out/</link>
      <pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://idev-blog.web.app/posts/concurrency-pattern-fan-in-fan-out/</guid>
      <description>You&amp;rsquo;ve got a pipeline set up. Data is flowing through your system beautifully. Sometimes, stages in your pipeline can be computationally expensive. When this happens, upstream stages in your pipeline can become blocked while waiting for your expensive stages to complete.</description>
    </item>
    
  </channel>
</rss>
